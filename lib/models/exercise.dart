import 'package:uuid/uuid.dart';

class Exercise {
  final String id;
  final String name;
  final String description;
  final String muscleGroup;
  final String equipment;
  final String difficultyLevel;
  final String sets;
  final String reps;
  final String targetMuscleGroup;
  final double? weight;
  final String? instructions; // –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é
  final List<String>? commonMistakes; // –ß–∞—Å—Ç—ã–µ –æ—à–∏–±–∫–∏
  final String? videoUrl; // –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
  final String? imageUrl; // –°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
  final List<String>? modifications; // –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
  final Duration exerciseTime; // –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  final Duration restTime; // –í—Ä–µ–º—è –æ—Ç–¥—ã—Ö–∞
  final String difficulty; // –î–æ–±–∞–≤–ª—è–µ–º –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  final String? superSetId;
  final String? notes;

  // –ù–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —Ä–µ–π—Ç–∏–Ω–≥–∞
  final double baseRating; // –ë–∞–∑–æ–≤—ã–π —Ä–µ–π—Ç–∏–Ω–≥ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è (1-100)
  final double currentRating; // –¢–µ–∫—É—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤
  final DateTime? lastUsed; // –ö–æ–≥–¥–∞ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –±—ã–ª–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑
  final int usageCount; // –°–∫–æ–ª—å–∫–æ —Ä–∞–∑ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –±—ã–ª–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ
  final bool isFavorite; // –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–º
  final int
      userPreference; // –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: +1 (–Ω—Ä–∞–≤–∏—Ç—Å—è), 0 (–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ), -1 (–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è)

  Exercise({
    String? id,
    required this.name,
    required this.description,
    required this.muscleGroup,
    required this.equipment,
    required this.difficultyLevel,
    this.sets = "4", // –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    this.reps = "10", // –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    required this.targetMuscleGroup,
    this.weight,
    this.instructions,
    this.commonMistakes,
    this.videoUrl,
    this.imageUrl,
    this.modifications,
    this.exerciseTime = const Duration(seconds: 45),
    this.restTime = const Duration(seconds: 30),
    this.superSetId,
    this.notes,
    this.baseRating = 50.0, // –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    double? currentRating, // –±—É–¥–µ—Ç –≤—ã—á–∏—Å–ª–µ–Ω–æ, –µ—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω–æ
    this.lastUsed,
    this.usageCount = 0,
    this.isFavorite = false,
    this.userPreference = 0,
  })  : id = id ?? name.replaceAll(' ', '_').toLowerCase(),
        difficulty = difficultyLevel,
        currentRating = currentRating ?? baseRating; // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–π—Ç–∏–Ω–≥

  Exercise copyWith({
    String? id,
    String? name,
    String? description,
    String? muscleGroup,
    String? equipment,
    String? difficultyLevel,
    String? sets,
    String? reps,
    String? targetMuscleGroup,
    double? weight,
    String? instructions,
    List<String>? commonMistakes,
    String? videoUrl,
    String? imageUrl,
    List<String>? modifications,
    Duration? exerciseTime,
    Duration? restTime,
    String? superSetId,
    String? notes,
    double? baseRating,
    double? currentRating,
    DateTime? lastUsed,
    int? usageCount,
    bool? isFavorite,
    int? userPreference,
  }) {
    return Exercise(
      id: id ?? this.id,
      name: name ?? this.name,
      description: description ?? this.description,
      muscleGroup: muscleGroup ?? this.muscleGroup,
      equipment: equipment ?? this.equipment,
      difficultyLevel: difficultyLevel ?? this.difficultyLevel,
      sets: sets ?? this.sets,
      reps: reps ?? this.reps,
      targetMuscleGroup: targetMuscleGroup ?? this.targetMuscleGroup,
      weight: weight ?? this.weight,
      instructions: instructions ?? this.instructions,
      commonMistakes: commonMistakes ?? this.commonMistakes,
      videoUrl: videoUrl ?? this.videoUrl,
      imageUrl: imageUrl ?? this.imageUrl,
      modifications: modifications ?? this.modifications,
      exerciseTime: exerciseTime ?? this.exerciseTime,
      restTime: restTime ?? this.restTime,
      superSetId: superSetId ?? this.superSetId,
      notes: notes ?? this.notes,
      baseRating: baseRating ?? this.baseRating,
      currentRating: currentRating ?? this.currentRating,
      lastUsed: lastUsed ?? this.lastUsed,
      usageCount: usageCount ?? this.usageCount,
      isFavorite: isFavorite ?? this.isFavorite,
      userPreference: userPreference ?? this.userPreference,
    );
  }

  factory Exercise.fromJson(Map<String, dynamic> json) {
    String? processedSuperSetId;
    if (json['superSetId'] != null) {
      if (json['superSetId'] is String) {
        processedSuperSetId = json['superSetId'];
      } else if (json['superSetId'] is List) {
        processedSuperSetId = (json['superSetId'] as List).first.toString();
      }
    }

    // –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    final videoUrl = json['videoUrl'] as String?;
    final imageUrl = json['imageUrl'] as String?;
    final name = json['name']?.toString() ?? 'Unknown Exercise';
    print('üìπ –î–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è: $name');
    print('üìπ URL –≤–∏–¥–µ–æ –∏–∑ JSON: $videoUrl');
    print('üñºÔ∏è URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ JSON: $imageUrl');

    return Exercise(
      id: json['id']?.toString(),
      name: name,
      description:
          json['description']?.toString() ?? 'No description available',
      muscleGroup: json['muscleGroup']?.toString() ?? 'Not specified',
      equipment: json['equipment']?.toString() ?? 'No equipment',
      difficultyLevel: json['difficultyLevel']?.toString() ?? 'Beginner',
      targetMuscleGroup: json['targetMuscleGroup']?.toString() ??
          json['muscleGroup']?.toString() ??
          'Not specified',
      sets: json['sets']?.toString() ?? "4",
      reps: json['reps']?.toString() ?? "10",
      weight: json['weight'] as double?,
      instructions: json['instructions'] as String?,
      commonMistakes: (json['commonMistakes'] as List<dynamic>?)
          ?.map((e) => e.toString())
          .toList(),
      videoUrl: videoUrl,
      imageUrl: imageUrl,
      modifications: (json['modifications'] as List<dynamic>?)
          ?.map((e) => e.toString())
          .toList(),
      exerciseTime: Duration(seconds: json['exerciseTime'] as int? ?? 45),
      restTime: Duration(seconds: json['restTime'] as int? ?? 30),
      superSetId: processedSuperSetId,
      notes: json['notes'] as String?,
      baseRating: (json['baseRating'] as num?)?.toDouble() ?? 50.0,
      currentRating: (json['currentRating'] as num?)?.toDouble(),
      lastUsed:
          json['lastUsed'] != null ? DateTime.parse(json['lastUsed']) : null,
      usageCount: json['usageCount'] as int? ?? 0,
      isFavorite: json['isFavorite'] as bool? ?? false,
      userPreference: json['userPreference'] as int? ?? 0,
    );
  }

  Map<String, dynamic> toJson() {
    // –£–¥–∞–ª—è–µ–º null –∑–Ω–∞—á–µ–Ω–∏—è –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Ç–∏–ø—ã –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å PostgreSQL
    final map = <String, dynamic>{
      'id': id,
      'name': name,
      'description': description,
      'muscleGroup': muscleGroup,
      'equipment': equipment,
      'difficultyLevel': difficultyLevel,
      'difficulty': difficultyLevel, // –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
      'targetMuscleGroup': targetMuscleGroup,
      'sets': sets,
      'reps': reps,
      'weight': weight,
      'instructions': instructions ?? '',
      'commonMistakes': commonMistakes ?? [],
      'videoUrl': videoUrl,
      'imageUrl': imageUrl,
      'modifications': modifications ?? [],
      'exerciseTime': exerciseTime.inSeconds,
      'restTime': restTime.inSeconds,
      'superSetId': superSetId,
      'notes': notes,
      'baseRating': baseRating,
      'currentRating': currentRating ?? baseRating,
      'lastUsed': lastUsed?.toIso8601String(),
      'usageCount': usageCount,
      'userPreference': userPreference,
      'isFavorite': isFavorite,
    };

    // –£–¥–∞–ª—è–µ–º null –∑–Ω–∞—á–µ–Ω–∏—è
    map.removeWhere((key, value) => value == null);

    return map;
  }

  static final List<Exercise> sampleExercises = [
    Exercise(
      name: '–ñ–∏–º –≥–∞–Ω—Ç–µ–ª–µ–π',
      description: '–ñ–∏–º –≥–∞–Ω—Ç–µ–ª–µ–π –ª–µ–∂–∞ –Ω–∞ —Å–∫–∞–º—å–µ',
      muscleGroup: 'chest',
      equipment: 'dumbbells',
      difficultyLevel: 'Intermediate',
      targetMuscleGroup: 'chest',
      sets: "4",
      reps: "12",
      superSetId: "chest_triceps_1",
      instructions: '–õ—è–≥—Ç–µ –Ω–∞ —Å–∫–∞–º—å—é, –≥–∞–Ω—Ç–µ–ª–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ –≥—Ä—É–¥–∏, –≤—ã–∂–∏–º–∞–π—Ç–µ –≤–≤–µ—Ä—Ö',
      exerciseTime: const Duration(seconds: 45),
      restTime: const Duration(seconds: 30),
    ),
    Exercise(
      name: '–†–∞–∑–≥–∏–±–∞–Ω–∏—è –Ω–∞ —Ç—Ä–∏—Ü–µ–ø—Å',
      description: '–†–∞–∑–≥–∏–±–∞–Ω–∏—è —Ä—É–∫ –Ω–∞ —Ç—Ä–∏—Ü–µ–ø—Å —Å –≥–∞–Ω—Ç–µ–ª—è–º–∏',
      muscleGroup: 'triceps',
      equipment: 'dumbbells',
      difficultyLevel: 'Intermediate',
      targetMuscleGroup: 'triceps',
      sets: "4",
      reps: "15",
      superSetId: "chest_triceps_1",
      instructions: '–ü–æ–¥–Ω–∏–º–∏—Ç–µ –≥–∞–Ω—Ç–µ–ª–∏ –∑–∞ –≥–æ–ª–æ–≤—É –∏ —Ä–∞–∑–≥–∏–±–∞–π—Ç–µ —Ä—É–∫–∏',
      exerciseTime: const Duration(seconds: 45),
      restTime: const Duration(seconds: 30),
    ),
    Exercise(
      name: '–ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è',
      description: '–ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è —à–∏—Ä–æ–∫–∏–º —Ö–≤–∞—Ç–æ–º',
      muscleGroup: 'back',
      equipment: 'pullup_bar',
      difficultyLevel: 'Advanced',
      targetMuscleGroup: 'back',
      sets: "3",
      reps: "8",
      superSetId: "back_biceps_1",
      instructions: '–ü–æ–¥—Ç—è–≥–∏–≤–∞–π—Ç–µ—Å—å –∫ –ø–µ—Ä–µ–∫–ª–∞–¥–∏–Ω–µ, —Å–≤–æ–¥—è –ª–æ–ø–∞—Ç–∫–∏',
      exerciseTime: const Duration(seconds: 45),
      restTime: const Duration(seconds: 30),
    ),
    Exercise(
      name: '–°–≥–∏–±–∞–Ω–∏—è –Ω–∞ –±–∏—Ü–µ–ø—Å',
      description: '–°–≥–∏–±–∞–Ω–∏—è —Ä—É–∫ –Ω–∞ –±–∏—Ü–µ–ø—Å —Å –≥–∞–Ω—Ç–µ–ª—è–º–∏',
      muscleGroup: 'biceps',
      equipment: 'dumbbells',
      difficultyLevel: 'Intermediate',
      targetMuscleGroup: 'biceps',
      sets: "3",
      reps: "12",
      superSetId: "back_biceps_1",
      instructions: '–í—ã–ø–æ–ª–Ω—è–π—Ç–µ —Å–≥–∏–±–∞–Ω–∏—è —Ä—É–∫ —Å –≥–∞–Ω—Ç–µ–ª—è–º–∏ —Å—Ç–æ—è',
      exerciseTime: const Duration(seconds: 45),
      restTime: const Duration(seconds: 30),
    ),
    Exercise(
      name: '–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è',
      description: '–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è —Å –≥–∞–Ω—Ç–µ–ª—è–º–∏',
      muscleGroup: 'legs',
      equipment: 'dumbbells',
      difficultyLevel: 'Intermediate',
      targetMuscleGroup: 'legs',
      sets: "4",
      reps: "15",
      superSetId: "legs_1",
      instructions: '–ü—Ä–∏—Å–µ–¥–∞–π—Ç–µ —Å –≥–∞–Ω—Ç–µ–ª—è–º–∏ —É –ø–ª–µ—á',
      exerciseTime: const Duration(seconds: 45),
      restTime: const Duration(seconds: 30),
    ),
    Exercise(
      name: '–í—ã–ø–∞–¥—ã',
      description: '–í—ã–ø–∞–¥—ã —Å –≥–∞–Ω—Ç–µ–ª—è–º–∏',
      muscleGroup: 'legs',
      equipment: 'dumbbells',
      difficultyLevel: 'Intermediate',
      targetMuscleGroup: 'legs',
      sets: "4",
      reps: "12",
      superSetId: "legs_1",
      instructions: '–í—ã–ø–æ–ª–Ω—è–π—Ç–µ –≤—ã–ø–∞–¥—ã –ø–æ–æ—á–µ—Ä–µ–¥–Ω–æ –∫–∞–∂–¥–æ–π –Ω–æ–≥–æ–π',
      exerciseTime: const Duration(seconds: 45),
      restTime: const Duration(seconds: 30),
    ),
    Exercise(
      name: '–ò–∫—Ä—ã —Å—Ç–æ—è',
      description: '–ü–æ–¥—ä–µ–º—ã –Ω–∞ –Ω–æ—Å–∫–∏ —Å—Ç–æ—è',
      muscleGroup: 'calves',
      equipment: 'dumbbells',
      difficultyLevel: 'Beginner',
      targetMuscleGroup: 'calves',
      sets: "4",
      reps: "20",
      superSetId: "legs_1",
      instructions: '–ü–æ–¥–Ω–∏–º–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–æ—Å–∫–∏ —Å –≥–∞–Ω—Ç–µ–ª—è–º–∏ –≤ —Ä—É–∫–∞—Ö',
      exerciseTime: const Duration(seconds: 45),
      restTime: const Duration(seconds: 30),
    ),
    Exercise(
      name: '–ñ–∏–º –≤ —Ç—Ä–µ–Ω–∞–∂–µ—Ä–µ',
      description: '–ñ–∏–º –æ—Ç –≥—Ä—É–¥–∏ –≤ —Ç—Ä–µ–Ω–∞–∂–µ—Ä–µ',
      muscleGroup: 'shoulders',
      equipment: 'machine',
      difficultyLevel: 'Intermediate',
      targetMuscleGroup: 'shoulders',
      sets: "3",
      reps: "12",
      superSetId: "shoulders_1",
      instructions: '–í—ã–ø–æ–ª–Ω—è–π—Ç–µ –∂–∏–º –æ—Ç –≥—Ä—É–¥–∏ –≤ —Ç—Ä–µ–Ω–∞–∂–µ—Ä–µ',
      exerciseTime: const Duration(seconds: 45),
      restTime: const Duration(seconds: 30),
    ),
    Exercise(
      name: '–†–∞–∑–≤–µ–¥–µ–Ω–∏—è –≥–∞–Ω—Ç–µ–ª–µ–π',
      description: '–†–∞–∑–≤–µ–¥–µ–Ω–∏—è –≥–∞–Ω—Ç–µ–ª–µ–π –≤ —Å—Ç–æ—Ä–æ–Ω—ã',
      muscleGroup: 'shoulders',
      equipment: 'dumbbells',
      difficultyLevel: 'Intermediate',
      targetMuscleGroup: 'shoulders',
      sets: "3",
      reps: "15",
      superSetId: "shoulders_1",
      instructions: '–†–∞–∑–≤–æ–¥–∏—Ç–µ –≥–∞–Ω—Ç–µ–ª–∏ –≤ —Å—Ç–æ—Ä–æ–Ω—ã –¥–æ —É—Ä–æ–≤–Ω—è –ø–ª–µ—á',
      exerciseTime: const Duration(seconds: 45),
      restTime: const Duration(seconds: 30),
    ),
    Exercise(
      name: '–ü–æ–¥—ä–µ–º—ã –ø–µ—Ä–µ–¥ —Å–æ–±–æ–π',
      description: '–ü–æ–¥—ä–µ–º—ã –≥–∞–Ω—Ç–µ–ª–µ–π –ø–µ—Ä–µ–¥ —Å–æ–±–æ–π',
      muscleGroup: 'shoulders',
      equipment: 'dumbbells',
      difficultyLevel: 'Beginner',
      targetMuscleGroup: 'shoulders',
      sets: "3",
      reps: "15",
      superSetId: "shoulders_1",
      instructions: '–ü–æ–¥–Ω–∏–º–∞–π—Ç–µ –≥–∞–Ω—Ç–µ–ª–∏ –ø–µ—Ä–µ–¥ —Å–æ–±–æ–π –¥–æ —É—Ä–æ–≤–Ω—è –ø–ª–µ—á',
      exerciseTime: const Duration(seconds: 45),
      restTime: const Duration(seconds: 30),
    ),
  ];

  // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑–æ–≤—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
  factory Exercise.basic({
    required String name,
    required String targetMuscleGroup,
    required String equipment,
    String? sets,
    String? reps,
    String difficulty = 'Beginner',
    String? description,
    String? superSetId,
  }) {
    return Exercise(
      name: name,
      description: description ?? 'Basic exercise',
      muscleGroup: targetMuscleGroup,
      equipment: equipment,
      difficultyLevel: difficulty,
      targetMuscleGroup: targetMuscleGroup,
      sets: sets ?? "4",
      reps: reps ?? "10",
      superSetId: superSetId,
    );
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤
  double calculateCurrentRating() {
    double rating = baseRating;

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    rating += userPreference * 15.0; // +15 –¥–ª—è like, -15 –¥–ª—è dislike

    // –°–Ω–∏–∂–∞–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –Ω–µ–¥–∞–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
    if (lastUsed != null) {
      final daysSinceLastUse = DateTime.now().difference(lastUsed!).inDays;
      if (daysSinceLastUse < 7) {
        // –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–æ—Å—å –≤ —Ç–µ—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
        rating -= 10.0 *
            (7 - daysSinceLastUse) /
            7; // –ë–æ–ª—å—à–µ —à—Ç—Ä–∞—Ñ –¥–ª—è –Ω–µ–¥–∞–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö
      }
    }

    // –ü–æ–≤—ã—à–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
    if (isFavorite) {
      rating += 20.0;
    }

    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥ –¥–∏–∞–ø–∞–∑–æ–Ω–æ–º 1-100
    return rating.clamp(1.0, 100.0);
  }

  // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–π—Ç–∏–Ω–≥ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
  Exercise markAsUsed() {
    return copyWith(
      lastUsed: DateTime.now(),
      usageCount: usageCount + 1,
      currentRating: calculateCurrentRating() -
          10.0, // –í—Ä–µ–º–µ–Ω–Ω–æ —Å–Ω–∏–∂–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    );
  }

  // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (like –∏–ª–∏ dislike)
  Exercise updateUserPreference(int newPreference) {
    return copyWith(
      userPreference: newPreference,
      currentRating: null, // –ü–µ—Ä–µ—Å—á–∏—Ç–∞–µ–º –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
    );
  }

  // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  Exercise toggleFavorite() {
    return copyWith(isFavorite: !isFavorite);
  }

  @override
  String toString() {
    return 'Exercise(id: $id, name: $name, videoUrl: $videoUrl, muscleGroup: $muscleGroup, equipment: $equipment, difficultyLevel: $difficultyLevel)';
  }
}
