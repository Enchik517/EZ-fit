import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
// import 'package:device_preview/device_preview.dart';
import 'package:supabase_flutter/supabase_flutter.dart';
import 'package:flutter_dotenv/flutter_dotenv.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'screens/auth_screen.dart';
import 'providers/workout_provider.dart';
import 'theme/app_theme.dart';
import 'package:flutter/foundation.dart';
import 'providers/chat_provider.dart';
import 'providers/survey_provider.dart';
import 'providers/auth_provider.dart';
import 'providers/subscription_provider.dart';
import 'providers/notification_provider.dart';
import 'screens/onboarding/onboarding_screen.dart';
import 'screens/main_navigation_screen.dart';
import 'screens/disclaimer_screen.dart';
import 'services/auth_service.dart';
import 'services/survey_service.dart';
import 'services/chat_service.dart';
import 'screens/chat_screen.dart';
import 'screens/login_screen.dart';
import 'services/workout_service.dart';
import 'screens/splash_screen.dart';
import 'screens/new_auth_screen.dart';
import 'screens/subscription_screen.dart';
import 'screens/paywall/superwall_screen.dart';
import 'services/superwall_service.dart';
import 'screens/goals_flow_screen.dart';
import 'screens/basics_screen.dart';
import 'models/exercise.dart';
import 'widgets/notification_permission_dialog.dart';
import 'dart:async';

// –ö–ª–∞—Å—Å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
class FirstRunFlag {
  static const String _key = 'has_seen_onboarding';
  static bool _hasBeenShown = false;
  static bool _initialized = false;

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ–ª–∞–≥ –∏–∑ SharedPreferences
  static Future<void> initialize() async {
    if (_initialized) return;

    try {
      final prefs = await SharedPreferences.getInstance();
      _hasBeenShown = prefs.getBool(_key) ?? false;
      _initialized = true;
      debugPrint('FirstRunFlag initialized: $_hasBeenShown');
    } catch (e) {
      debugPrint('Error initializing FirstRunFlag: $e');
    }
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–∫–∞–∑–∞–Ω –ª–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
  static bool get hasBeenShown => _hasBeenShown;

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–ª–∞–≥, —á—Ç–æ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –±—ã–ª –ø–æ–∫–∞–∑–∞–Ω
  static Future<void> setShown() async {
    _hasBeenShown = true;
    try {
      final prefs = await SharedPreferences.getInstance();
      await prefs.setBool(_key, true);
      debugPrint('FirstRunFlag set to shown');
    } catch (e) {
      debugPrint('Error saving FirstRunFlag: $e');
    }
  }
}

// –ö–ª–∞—Å—Å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–∏–Ω—è—Ç–∏—è –¥–∏—Å–∫–ª–µ–π–º–µ—Ä–∞
class DisclaimerFlag {
  static const String _key = 'has_accepted_disclaimer';
  static bool _hasAccepted = false;
  static bool _initialized = false;

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ–ª–∞–≥ –∏–∑ SharedPreferences
  static Future<void> initialize() async {
    if (_initialized) return;

    try {
      final prefs = await SharedPreferences.getInstance();
      _hasAccepted = prefs.getBool(_key) ?? false;
      _initialized = true;
      if (kDebugMode) debugPrint('DisclaimerFlag initialized: $_hasAccepted');
    } catch (e) {
      if (kDebugMode) debugPrint('Error initializing DisclaimerFlag: $e');
    }
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø—Ä–∏–Ω—è—Ç –ª–∏ –¥–∏—Å–∫–ª–µ–π–º–µ—Ä
  static bool get hasAccepted => _hasAccepted == true;

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–ª–∞–≥, —á—Ç–æ –¥–∏—Å–∫–ª–µ–π–º–µ—Ä –±—ã–ª –ø—Ä–∏–Ω—è—Ç
  static Future<void> setAccepted() async {
    _hasAccepted = true;
    try {
      final prefs = await SharedPreferences.getInstance();
      await prefs.setBool(_key, true);
    } catch (e) {
      if (kDebugMode) debugPrint('Error saving DisclaimerFlag: $e');
    }
  }
}

// –ö–ª–∞—Å—Å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
class NotificationPermissionFlag {
  static const String _key = 'has_shown_notification_permission';
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ–ª–∞–≥–∞ –∫–∞–∫ true, —á—Ç–æ–±—ã –¥–∏–∞–ª–æ–≥ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª—Å—è
  static bool _hasShown = true;
  static bool _initialized = false;

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ–ª–∞–≥ –∏–∑ SharedPreferences
  static Future<void> initialize() async {
    if (_initialized) return;

    try {
      final prefs = await SharedPreferences.getInstance();
      // –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ true, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–æ–≥–æ, —á—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ
      _hasShown = true;
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ true –≤ SharedPreferences
      await prefs.setBool(_key, true);
      _initialized = true;
      debugPrint('NotificationPermissionFlag initialized: $_hasShown');
    } catch (e) {
      debugPrint('Error initializing NotificationPermissionFlag: $e');
    }
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –±—ã–ª –ª–∏ –ø–æ–∫–∞–∑–∞–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π - –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true
  static bool get hasShown => true;

  // –ú–µ—Ç–æ–¥ –æ—Å—Ç–∞–≤–ª–µ–Ω –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, –Ω–æ —Ç–µ–ø–µ—Ä—å –Ω–µ –º–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  static Future<void> setShown() async {
    // –ù–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º, —Ç–∞–∫ –∫–∞–∫ –¥–∏–∞–ª–æ–≥ –≤—Å–µ–≥–¥–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø–æ–∫–∞–∑–∞–Ω–Ω—ã–º
    debugPrint(
        'NotificationPermissionFlag: setShown called, but dialog is already disabled');
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –∫–ª—é—á –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–∑ –ª—é–±–æ–π —Ç–æ—á–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
final GlobalKey<NavigatorState> navigatorKey = GlobalKey<NavigatorState>();

void main() async {
  try {
    WidgetsFlutterBinding.ensureInitialized();

    await dotenv.load();

    final supabaseUrl = dotenv.env['SUPABASE_URL'];
    final supabaseAnonKey = dotenv.env['SUPABASE_ANON_KEY'];

    if (supabaseUrl == null || supabaseAnonKey == null) {
      throw Exception('Missing Supabase URL or Anon Key');
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase
    await Supabase.initialize(
      url: supabaseUrl.trim(),
      anonKey: supabaseAnonKey.trim(),
    );

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è
    final session = await Supabase.instance.client.auth.currentSession;

    // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–µ—Å—Å–∏—è, –æ–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (session != null) {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–ª–∞–≥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø—Ä–æ—Å–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        final userId = session.user.id;
        final response = await Supabase.instance.client
            .from('user_profiles')
            .select('has_completed_survey')
            .eq('id', userId)
            .single();

        if (response != null && response['has_completed_survey'] == true) {
          // –ï—Å–ª–∏ –æ–ø—Ä–æ—Å –ø—Ä–æ–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –æ–±–Ω–æ–≤–ª—è–µ–º –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          await Supabase.instance.client.auth.updateUser(
            UserAttributes(
              data: {
                'has_completed_survey': true,
              },
            ),
          );
          debugPrint(
              '–û–±–Ω–æ–≤–ª–µ–Ω—ã –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: has_completed_survey = true');
        }
      } catch (e) {
        debugPrint(
            '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: $e');
      }
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–ª–∞–≥ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
    await FirstRunFlag.initialize();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–ª–∞–≥ –ø—Ä–∏–Ω—è—Ç–∏—è –¥–∏—Å–∫–ª–µ–π–º–µ—Ä–∞
    await DisclaimerFlag.initialize();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–ª–∞–≥ –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    await NotificationPermissionFlag.initialize();

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Superwall
    print('üìÅ Main: –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –∏–∑ —Ñ–∞–π–ª–∞...');
    print('üìÅ Main: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É assets/exercise.json');
    print(
        'üìÅ Main: –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π: ${WorkoutService.exercises.length}');

    await WorkoutService.loadExercises();
    print(
        'üìÅ Main: –ó–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∞ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π, —Ç–µ–ø–µ—Ä—å –≤ –º–∞—Å—Å–∏–≤–µ: ${WorkoutService.exercises.length}');

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
    final exercise = WorkoutService.exercises.firstWhere(
      (e) => e['name'] == 'Dumbbell Lateral Raise',
      orElse: () => {'name': 'Not found', 'videoUrl': null},
    );

    print('‚úÖ Main: –ø—Ä–æ–≤–µ—Ä–∫–∞ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è Dumbbell Lateral Raise:');
    print('‚úÖ Main: –Ω–∞–π–¥–µ–Ω–æ: ${exercise['name'] != 'Not found'}');
    print('‚úÖ Main: videoUrl: ${exercise['videoUrl']}');

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –æ–±—ä–µ–∫—Ç Exercise –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    if (exercise['name'] != 'Not found') {
      final testExercise = Exercise.fromJson(exercise);
      print('‚úÖ Main: —Ç–µ—Å—Ç–æ–≤—ã–π –æ–±—ä–µ–∫—Ç Exercise: $testExercise');
      print('‚úÖ Main: videoUrl –≤ –æ–±—ä–µ–∫—Ç–µ: ${testExercise.videoUrl}');
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Superwall - —Ç–µ–ø–µ—Ä—å –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
    try {
      debugPrint('–ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é Superwall...');

      // –î–∞–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
      await Future.delayed(Duration(milliseconds: 300));

      final superwallService = SuperwallService();
      await superwallService.initialize().timeout(
        Duration(seconds: 5),
        onTimeout: () {
          debugPrint('‚è±Ô∏è Timeout –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Superwall');
          return;
        },
      );

      debugPrint('‚úÖ Main: Superwall –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    } catch (e) {
      // –ï—Å–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Superwall –Ω–µ —É–¥–∞–ª–∞—Å—å, —ç—Ç–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
      debugPrint('‚ö†Ô∏è Main: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Superwall: $e');
    }

    runApp(
      MultiProvider(
        providers: [
          ChangeNotifierProvider(
            create: (_) {
              final provider = WorkoutProvider();
              // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
              Future.microtask(() => provider.loadStatistics());
              return provider;
            },
          ),
          ChangeNotifierProxyProvider<WorkoutProvider, AuthProvider>(
            create: (context) => AuthProvider(context.read<WorkoutProvider>()),
            update: (context, workoutProvider, previous) =>
                previous ?? AuthProvider(workoutProvider),
          ),
          Provider<SurveyService>(create: (_) => SurveyService()),
          ChangeNotifierProxyProvider<SurveyService, SurveyProvider>(
            create: (context) => SurveyProvider(context.read<SurveyService>()),
            update: (context, surveyService, previous) =>
                previous ?? SurveyProvider(surveyService),
          ),
          ChangeNotifierProvider(create: (_) => AuthService()),
          // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
          ChangeNotifierProvider(create: (_) => NotificationProvider()),
          // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä ChatService, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤—Ö–æ–¥–µ
          Provider<ChatService>(
            create: (_) => ChatService(),
            // –ù–µ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
            dispose: (_, service) => service.reset(),
          ),
          ChangeNotifierProxyProvider<ChatService, ChatProvider>(
            create: (context) => ChatProvider(context.read<ChatService>()),
            update: (context, chatService, previous) {
              if (previous != null) {
                // –û—á–∏—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
                return previous..reset(chatService);
              }
              return ChatProvider(chatService);
            },
          ),
          ChangeNotifierProvider(create: (_) => SubscriptionProvider()),
        ],
        child: const AppLifecycleObserver(child: MyApp()),
      ),
    );
  } catch (e) {
    if (kDebugMode) debugPrint('Error initializing app: $e');
    rethrow;
  }
}

/// –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
class AppLifecycleObserver extends StatefulWidget {
  final Widget child;

  const AppLifecycleObserver({Key? key, required this.child}) : super(key: key);

  @override
  State<AppLifecycleObserver> createState() => _AppLifecycleObserverState();
}

class _AppLifecycleObserverState extends State<AppLifecycleObserver>
    with WidgetsBindingObserver {
  // –§–ª–∞–≥ —É–∫–∞–∑—ã–≤–∞—é—â–∏–π, –±—ã–ª–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  bool _notificationSent = false;
  // –¢–∞–π–º–µ—Ä –¥–ª—è –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  Timer? _exitTimer;

  // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  // –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  Timer? _testTimer;

  @override
  void initState() {
    super.initState();
    WidgetsBinding.instance.addObserver(this);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    WidgetsBinding.instance.addPostFrameCallback((_) {
      final notificationProvider =
          Provider.of<NotificationProvider>(context, listen: false);
      notificationProvider.initialize();

      // –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      // _testTimer = Timer(const Duration(seconds: 10), () {
      //   _testNotifications(notificationProvider);
      // });
    });
  }

  @override
  void dispose() {
    _exitTimer?.cancel();
    _testTimer?.cancel();
    WidgetsBinding.instance.removeObserver(this);
    super.dispose();
  }

  @override
  void didChangeAppLifecycleState(AppLifecycleState state) {
    final notificationProvider =
        Provider.of<NotificationProvider>(context, listen: false);

    if (state == AppLifecycleState.paused ||
        state == AppLifecycleState.inactive) {
      debugPrint(
          'AppLifecycleObserver: –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—à–ª–æ –≤ —Ñ–æ–Ω (—Å–æ—Å—Ç–æ—è–Ω–∏–µ = $state)');

      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      _notificationSent = false;

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      // –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å –ª–æ–∂–Ω—ã—Ö —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–π –ø—Ä–∏ –±—ã—Å—Ç—Ä–æ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –º–µ–∂–¥—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏
      _exitTimer?.cancel();
      _exitTimer = Timer(const Duration(seconds: 2), () {
        if (!_notificationSent) {
          _sendExitNotification(notificationProvider);
        }
      });
    } else if (state == AppLifecycleState.resumed) {
      debugPrint('AppLifecycleObserver: –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–µ—Ä–Ω—É–ª–æ—Å—å –Ω–∞ –ø–µ—Ä–µ–¥–Ω–∏–π –ø–ª–∞–Ω');

      // –û—Ç–º–µ–Ω—è–µ–º —Ç–∞–π–º–µ—Ä –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
      _exitTimer?.cancel();
      _notificationSent = false;

      // –û—Ç–º–µ–Ω—è–µ–º –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
      notificationProvider.cancelAllNotifications();
    }
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
  void _sendExitNotification(NotificationProvider provider) async {
    // –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
    return;

    // if (_notificationSent) return;

    // _notificationSent = true;

    // // –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—Ä–æ—Å–∏–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è, –µ—Å–ª–∏ –µ—â–µ –Ω–µ –±—ã–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω—ã
    // final hasPermission = await provider.requestPermissions();
    // debugPrint('AppLifecycleObserver: –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π - $hasPermission');

    // // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–≤–∞–π–¥–µ—Ä
    // // –°–æ–∑–¥–∞–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –¥–ª—è –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ–π —Ä–∞–±–æ—Ç—ã
    // await Future.delayed(const Duration(milliseconds: 300));
    // debugPrint('AppLifecycleObserver: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞');
    // await provider.showExitNotification();
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  Future<void> _testNotifications(NotificationProvider provider) async {
    debugPrint('AppLifecycleObserver: —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');

    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
    final hasPermission = await provider.requestPermissions();
    debugPrint('AppLifecycleObserver: —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∞ - $hasPermission');

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞
    await provider.sendTestNotification();

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    await Future.delayed(const Duration(seconds: 3));
    await provider.sendRandomMotivationalNotification();

    debugPrint('AppLifecycleObserver: —Ç–µ—Å—Ç–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã');
  }

  @override
  Widget build(BuildContext context) {
    return widget.child;
  }
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    Future.delayed(Duration.zero, () {
      Provider.of<AuthProvider>(context, listen: false).initialize();
      Provider.of<SubscriptionProvider>(context, listen: false).initialize();

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      final notificationProvider =
          Provider.of<NotificationProvider>(context, listen: false);
      notificationProvider.initialize();

      // –î–∏–∞–ª–æ–≥ –∑–∞–ø—Ä–æ—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–µ–Ω
      // if (!NotificationPermissionFlag.hasShown) {
      //   // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
      //   WidgetsBinding.instance.addPostFrameCallback((_) {
      //     if (navigatorKey.currentContext != null) {
      //       _showNotificationPermissionDialog(navigatorKey.currentContext!);
      //     }
      //   });
      // }
    });

    return MaterialApp(
      navigatorKey: navigatorKey,
      // useInheritedMediaQuery: true,
      // locale: DevicePreview.locale(context),
      // builder: DevicePreview.appBuilder,
      title: 'Fitness App',
      theme: ThemeData(
        primarySwatch: Colors.blue,
        fontFamily: 'Inter',
        textTheme: const TextTheme(
          bodyLarge: TextStyle(fontFamily: 'Inter'),
          bodyMedium: TextStyle(fontFamily: 'Inter'),
          titleLarge: TextStyle(fontFamily: 'Inter'),
          titleMedium: TextStyle(fontFamily: 'Inter'),
          titleSmall: TextStyle(fontFamily: 'Inter'),
          displayLarge: TextStyle(fontFamily: 'Inter'),
          displayMedium: TextStyle(fontFamily: 'Inter'),
          displaySmall: TextStyle(fontFamily: 'Inter'),
          headlineLarge: TextStyle(fontFamily: 'Inter'),
          headlineMedium: TextStyle(fontFamily: 'Inter'),
          headlineSmall: TextStyle(fontFamily: 'Inter'),
        ),
      ),
      home: Consumer<AuthProvider>(
        builder: (context, authProvider, _) {
          if (authProvider.isLoading) {
            return const SplashScreen();
          }

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –ø–æ–∫–∞–∑–∞–Ω –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ (–ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)
          final bool isFirstRun = _isFirstRun();

          // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫, –í–°–ï–ì–î–ê –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –ø–µ—Ä–µ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
          if (isFirstRun) {
            debugPrint('–ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–Ω–±–æ—Ä–¥–∏–Ω–≥');
            return OnboardingScreen(
              onComplete: () {
                // –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –ø–æ–∫–∞–∑–∞–Ω
                _setFirstRunCompleted();
                // –ü–æ—Å–ª–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                Navigator.of(navigatorKey.currentContext!)
                    .pushReplacementNamed('/auth');
              },
            );
          }

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–Ω—è—Ç –ª–∏ –¥–∏—Å–∫–ª–µ–π–º–µ—Ä
          // –í–ê–ñ–ù–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –¥–∏—Å–∫–ª–µ–π–º–µ—Ä–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
          // –ú—ã –±—É–¥–µ–º –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –¥–∏—Å–∫–ª–µ–π–º–µ—Ä –ü–û–°–õ–ï –æ–ø—Ä–æ—Å–∞ –∏ –æ–ø–ª–∞—Ç—ã

          // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
          if (authProvider.user != null) {
            debugPrint('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–ø—Ä–æ—Å–∞');

            // –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞: –µ—Å–ª–∏ –¥–∏—Å–∫–ª–µ–π–º–µ—Ä –ø—Ä–∏–Ω—è—Ç, –∏–¥–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
            // –ï—Å–ª–∏ –Ω–µ –ø—Ä–∏–Ω—è—Ç, –Ω–æ –æ–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–µ–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏—Å–∫–ª–µ–π–º–µ—Ä
            // –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –æ–ø—Ä–æ—Å–∞

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–ø—Ä–æ—Å–∞
            final profile = authProvider.userProfile;
            final hasCompletedSurvey = profile?.hasCompletedSurvey == true ||
                authProvider.hasSurveyCompletionFlag();

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–Ω—è—Ç –ª–∏ –¥–∏—Å–∫–ª–µ–π–º–µ—Ä –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
            final disclaimerAccepted = DisclaimerFlag.hasAccepted;
            if (disclaimerAccepted) {
              authProvider.setDisclaimerAccepted(true);
            }

            debugPrint(
                '–°—Ç–∞—Ç—É—Å –æ–ø—Ä–æ—Å–∞: $hasCompletedSurvey, –î–∏—Å–∫–ª–µ–π–º–µ—Ä –ø—Ä–∏–Ω—è—Ç: $disclaimerAccepted');

            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –æ–ø—Ä–æ—Å–∞, –µ—Å–ª–∏ –æ–Ω –Ω–µ –ø—Ä–æ–π–¥–µ–Ω
            if (!hasCompletedSurvey) {
              debugPrint('–û–ø—Ä–æ—Å –Ω–µ –ø—Ä–æ–π–¥–µ–Ω, –æ—Ç–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –æ–ø—Ä–æ—Å–∞');
              return const GoalsFlowScreen();
            }
            // –ï—Å–ª–∏ –æ–ø—Ä–æ—Å –ø—Ä–æ–π–¥–µ–Ω, –Ω–æ –¥–∏—Å–∫–ª–µ–π–º–µ—Ä –Ω–µ –ø—Ä–∏–Ω—è—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –¥–∏—Å–∫–ª–µ–π–º–µ—Ä–∞
            else if (!disclaimerAccepted) {
              debugPrint(
                  '–û–ø—Ä–æ—Å –ø—Ä–æ–π–¥–µ–Ω, –Ω–æ –¥–∏—Å–∫–ª–µ–π–º–µ—Ä –Ω–µ –ø—Ä–∏–Ω—è—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –¥–∏—Å–∫–ª–µ–π–º–µ—Ä–∞');
              return const DisclaimerScreen();
            }
            // –ï—Å–ª–∏ –∏ –æ–ø—Ä–æ—Å –ø—Ä–æ–π–¥–µ–Ω, –∏ –¥–∏—Å–∫–ª–µ–π–º–µ—Ä –ø—Ä–∏–Ω—è—Ç, –∏–¥–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
            else {
              debugPrint(
                  '–û–ø—Ä–æ—Å –ø—Ä–æ–π–¥–µ–Ω –∏ –¥–∏—Å–∫–ª–µ–π–º–µ—Ä –ø—Ä–∏–Ω—è—Ç, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω');
              return const MainNavigationScreen();
            }
          }

          // –ï—Å–ª–∏ –µ—Å—Ç—å –∞–Ω–æ–Ω–∏–º, —É–¥–∞–ª—è–µ–º –µ–≥–æ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
          if (kIsWeb) {
            return const NewAuthScreen();
          }

          final user = authProvider.user;
          if (user == null) {
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –≤—Ö–æ–¥–∞
            return const NewAuthScreen();
          }

          final profile = authProvider.userProfile;
          if (profile == null || !profile.hasCompletedSurvey) {
            return const GoalsFlowScreen();
          }

          // –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–æ—Å—Ç –∏ –≤–µ—Å, —Å—Ä–∞–∑—É —Å—á–∏—Ç–∞–µ–º –æ–ø—Ä–æ—Å –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–º
          if (profile.height! > 0 &&
              profile.weight! > 0 &&
              !profile.hasCompletedSurvey) {
            WidgetsBinding.instance.addPostFrameCallback((_) async {
              debugPrint(
                  '–ù–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Ä–æ—Å—Ç–∞ –∏ –≤–µ—Å–∞ –≤ –ø—Ä–æ—Ñ–∏–ª–µ, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–º–µ—á–∞–µ–º –æ–ø—Ä–æ—Å –∫–∞–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π');

              // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å
              await authProvider
                  .saveUserProfile(profile.copyWith(hasCompletedSurvey: true));

              // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
              await authProvider.updateSurveyCompletionFlag(true);
            });
          }

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫ —Ñ–ª–∞–≥ –ø—Ä–æ—Ñ–∏–ª—è, —Ç–∞–∫ –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          // –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –æ–ø—Ä–æ—Å –ø—Ä–æ–π–¥–µ–Ω - —Å—á–∏—Ç–∞–µ–º –µ–≥–æ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–º
          final hasCompletedSurveyInProfile = profile.hasCompletedSurvey;
          final hasCompletedSurveyInMetadata =
              authProvider.hasSurveyCompletionFlag();
          final hasCompletedSurvey =
              hasCompletedSurveyInProfile || hasCompletedSurveyInMetadata;

          debugPrint(
              '–§–ª–∞–≥ –≤ –ø—Ä–æ—Ñ–∏–ª–µ: $hasCompletedSurveyInProfile, –§–ª–∞–≥ –≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö: $hasCompletedSurveyInMetadata');

          if (!hasCompletedSurvey) {
            return const GoalsFlowScreen();
          }

          // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
          return const MainNavigationScreen();
        },
      ),
      routes: {
        '/auth': (context) => const NewAuthScreen(),
        '/login': (context) => LoginScreen(),
        '/main': (context) => const MainNavigationScreen(),
        '/onboarding': (context) => const OnboardingScreen(),
        '/basics': (context) => const BasicsScreen(),
        '/chat': (context) => const ChatScreen(),
        '/subscription': (context) => const SubscriptionScreen(),
        '/paywall': (context) {
          // –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è —ç–∫—Ä–∞–Ω–∞ paywall –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
          // –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –ù–∞–∑–∞–¥
          return WillPopScope(
            onWillPop: () async {
              // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
              Navigator.of(context).pushReplacementNamed('/main');
              return false;
            },
            child: const SuperwallScreen(),
          );
        },
      },
      debugShowCheckedModeBanner: false,
    );
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–º –∑–∞–ø—É—Å–∫–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  bool _isFirstRun() {
    // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ FirstRunFlag
    return !FirstRunFlag.hasBeenShown;
  }

  // –ü–æ–º–µ—á–∞–µ—Ç –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π
  void _setFirstRunCompleted() {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ FirstRunFlag
    FirstRunFlag.setShown();
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  void _showNotificationPermissionDialog(BuildContext context) {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–∏–¥–∂–µ—Ç –Ω–∞–ø—Ä—è–º—É—é –≤–º–µ—Å—Ç–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
    showDialog<void>(
      context: context,
      barrierDismissible: false,
      builder: (BuildContext context) {
        // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞–ø—Ä—è–º—É—é
        return NotificationPermissionDialog(
          onPermissionGranted: () {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–ª–∞–≥, —á—Ç–æ –¥–∏–∞–ª–æ–≥ –±—ã–ª –ø–æ–∫–∞–∑–∞–Ω
            NotificationPermissionFlag.setShown();
            debugPrint('–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–æ');
          },
          onPermissionDenied: () {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–ª–∞–≥, —á—Ç–æ –¥–∏–∞–ª–æ–≥ –±—ã–ª –ø–æ–∫–∞–∑–∞–Ω
            NotificationPermissionFlag.setShown();
            debugPrint('–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ');
          },
        );
      },
    );
  }
}
