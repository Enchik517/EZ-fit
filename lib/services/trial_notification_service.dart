import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';
import '../services/notification_service.dart';
import '../services/user_service.dart';
import '../models/user_profile.dart';

class TrialNotificationService {
  static const String _trialStartDateKey = 'trial_start_date';
  static const String _onboardingReminderSentKey = 'onboarding_reminder_sent';
  static const int _onboardingReminderDelayHours = 48; // 48 —á–∞—Å–æ–≤
  static const int _onboardingReminderNotificationId = 9000;

  /// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –Ω–∞—á–∞–ª–æ –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
  Future<void> registerTrialStart() async {
    try {
      final prefs = await SharedPreferences.getInstance();

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –∫–∞–∫ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
      final now = DateTime.now().millisecondsSinceEpoch;
      await prefs.setInt(_trialStartDateKey, now);

      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      await prefs.setBool(_onboardingReminderSentKey, false);

      debugPrint(
          'TrialNotificationService: –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${DateTime.now()}');

      // –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ —á–µ—Ä–µ–∑ 48 —á–∞—Å–æ–≤
      _scheduleOnboardingCheck();
    } catch (e) {
      debugPrint(
          'TrialNotificationService: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞: $e');
    }
  }

  /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–≤–µ—Ä—à–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥, –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª
  Future<void> _scheduleOnboardingCheck() async {
    try {
      final notificationService = NotificationService();

      // –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 48 —á–∞—Å–æ–≤
      await notificationService.scheduleNotification(
        id: _onboardingReminderNotificationId,
        title: "üëã Still With Us?",
        body:
            "You're almost there! Complete your setup today to get the most out of the app.",
        seconds:
            _onboardingReminderDelayHours * 3600, // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —á–∞—Å—ã –≤ —Å–µ–∫—É–Ω–¥—ã
        payload: "onboarding_reminder",
      );

      debugPrint(
          'TrialNotificationService: –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ —á–µ—Ä–µ–∑ $_onboardingReminderDelayHours —á–∞—Å–æ–≤');
    } catch (e) {
      debugPrint(
          'TrialNotificationService: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞: $e');
    }
  }

  /// –û—Ç–º–µ—á–∞–µ—Ç, —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–º –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
  Future<void> markOnboardingReminderSent() async {
    try {
      final prefs = await SharedPreferences.getInstance();
      await prefs.setBool(_onboardingReminderSentKey, true);
      debugPrint(
          'TrialNotificationService: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–º –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–µ –æ—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ');
    } catch (e) {
      debugPrint(
          'TrialNotificationService: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $e');
    }
  }

  /// –û—Ç–º–µ–Ω—è–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–º –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–µ
  Future<void> cancelOnboardingReminder() async {
    try {
      final notificationService = NotificationService();
      await notificationService
          .cancelNotification(_onboardingReminderNotificationId);
      debugPrint(
          'TrialNotificationService: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–º –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–µ –æ—Ç–º–µ–Ω–µ–Ω–æ');
    } catch (e) {
      debugPrint('TrialNotificationService: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $e');
    }
  }
}
