import 'package:flutter/material.dart';
import 'package:supabase_flutter/supabase_flutter.dart';
import 'dart:typed_data';
import 'package:http/http.dart' as http;
import '../models/exercise.dart';
import 'video_thumbnail_service.dart';

class ExerciseImageService {
  static final _supabase = Supabase.instance.client;

  // –ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Supabase
  static Future<String?> uploadExerciseImage(
      String exerciseId, Uint8List imageBytes, String extension) async {
    try {
      final userId = _supabase.auth.currentUser?.id;
      if (userId == null) return null;

      final path = 'exercises/$userId/${exerciseId}_image.$extension';

      await _supabase.storage
          .from('exercise_images')
          .uploadBinary(path, imageBytes);

      // –ü–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL –¥–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      final imageUrl =
          _supabase.storage.from('exercise_images').getPublicUrl(path);

      return imageUrl;
    } catch (e) {
      debugPrint('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è: $e');
      return null;
    }
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
  static Future<bool> updateExerciseImageUrl(
      String exerciseId, String imageUrl) async {
    try {
      final userId = _supabase.auth.currentUser?.id;
      if (userId == null) return false;

      await _supabase
          .from('exercises')
          .update({'image_url': imageUrl})
          .eq('id', exerciseId)
          .eq('user_id', userId);

      return true;
    } catch (e) {
      debugPrint('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è: $e');
      return false;
    }
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
  static String getExerciseImageUrl(Exercise exercise) {
    // –ï—Å–ª–∏ —É —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è —É–∂–µ –µ—Å—Ç—å URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    if (exercise.imageUrl != null && exercise.imageUrl!.isNotEmpty) {
      debugPrint('üñºÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–¥–∞–Ω–Ω—ã–π imageUrl: ${exercise.imageUrl}');
      return exercise.imageUrl!;
    }

    // –ï—Å–ª–∏ –µ—Å—Ç—å –≤–∏–¥–µ–æURL, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–µ–≤—å—é
    if (exercise.videoUrl != null && exercise.videoUrl!.isNotEmpty) {
      debugPrint('üé¨ –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –ø—Ä–µ–≤—å—é –∏–∑ –≤–∏–¥–µ–æ: ${exercise.videoUrl}');
      return exercise.videoUrl!;
    }

    // –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –Ω–∏ –≤–∏–¥–µ–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    // –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–º–µ–Ω–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
    debugPrint(
        '‚ö†Ô∏è –ù–µ—Ç URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ –≤–∏–¥–µ–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ');
    return _getDefaultImageForName(exercise.name, exercise.muscleGroup);
  }

  // –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ –∏–º–µ–Ω–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∏ –≥—Ä—É–ø–ø–µ –º—ã—à—Ü
  static String _getDefaultImageForName(String name, String muscleGroup) {
    final Map<String, String> defaultImageUrls = {
      // –ë–∞–∑–æ–≤—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
      'Push-Up':
          'https://images.unsplash.com/photo-1598971639058-fab3c3109a00?w=800',
      'Knee Push-Up':
          'https://images.unsplash.com/photo-1598971639058-fab3c3109a00?w=800',
      'Squat':
          'https://images.unsplash.com/photo-1574680096145-d05b474e2155?w=800',
      'Pull-Up':
          'https://images.unsplash.com/photo-1598266863556-9e58b0592836?w=800',
      'Lunge':
          'https://images.unsplash.com/photo-1597452485669-2c7bb5fef90d?w=800',
      'Plank':
          'https://images.unsplash.com/photo-1566241142559-40e1dab266c6?w=800',
    };

    // –ü–æ–∏—Å–∫ —á–∞—Å—Ç–∏—á–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –≤ –∏–º–µ–Ω–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
    for (final entry in defaultImageUrls.entries) {
      if (name.toLowerCase().contains(entry.key.toLowerCase())) {
        return entry.value;
      }
    }

    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è, –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ –≥—Ä—É–ø–ø–µ –º—ã—à—Ü
    if (muscleGroup.toLowerCase().contains('chest')) {
      return 'https://images.unsplash.com/photo-1534368959876-26bf04f2c947?w=800';
    } else if (muscleGroup.toLowerCase().contains('back')) {
      return 'https://images.unsplash.com/photo-1603287681836-b174ce5074c2?w=800';
    } else if (muscleGroup.toLowerCase().contains('leg') ||
        muscleGroup.toLowerCase().contains('quad')) {
      return 'https://images.unsplash.com/photo-1574680096145-d05b474e2155?w=800';
    } else if (muscleGroup.toLowerCase().contains('shoulder')) {
      return 'https://images.unsplash.com/photo-1530822847156-e092f2fc04c8?w=800';
    } else if (muscleGroup.toLowerCase().contains('arm') ||
        muscleGroup.toLowerCase().contains('bicep') ||
        muscleGroup.toLowerCase().contains('tricep')) {
      return 'https://images.unsplash.com/photo-1581009146145-b5ef050c2e1e?w=800';
    } else if (muscleGroup.toLowerCase().contains('core') ||
        muscleGroup.contains('abs')) {
      return 'https://images.unsplash.com/photo-1544216428-10c1ec0e76c1?w=800';
    }

    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
    return 'https://images.unsplash.com/photo-1517963879433-6ad2b056d712?w=800';
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –ø–æ URL
  static Future<bool> urlExists(String url) async {
    try {
      final response = await http.head(Uri.parse(url));
      return response.statusCode >= 200 && response.statusCode < 300;
    } catch (e) {
      return false;
    }
  }

  // –°–æ–∑–¥–∞–µ–º –≤–∏–¥–∂–µ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
  static Widget buildExerciseImage(
    Exercise exercise, {
    double? width,
    double? height,
    BoxFit fit = BoxFit.cover,
    BorderRadius? borderRadius,
  }) {
    try {
      // –ï—Å–ª–∏ –µ—Å—Ç—å –≤–∏–¥–µ–æ URL, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–µ–≤—å—é –∏–∑ –≤–∏–¥–µ–æ
      if (exercise.videoUrl != null && exercise.videoUrl!.isNotEmpty) {
        final Widget thumbnailWidget =
            VideoThumbnailService.buildVideoThumbnail(
          exercise.videoUrl!,
          width: width,
          height: height,
          fit: fit,
          title: exercise.name,
        );

        if (borderRadius != null) {
          return ClipRRect(
            borderRadius: borderRadius,
            child: thumbnailWidget,
          );
        }
        return thumbnailWidget;
      }

      // –ï—Å–ª–∏ –Ω–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤–∏–¥–µ–æ –¥–ª—è —ç—Ç–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è,
      // –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –≥—Ä—É–ø–ø—ã –º—ã—à—Ü
      // –∏–ª–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã
      String demoVideoUrl = _getDemoVideoForExercise(exercise);

      final Widget thumbnailWidget = VideoThumbnailService.buildVideoThumbnail(
        demoVideoUrl,
        width: width,
        height: height,
        fit: fit,
        title: exercise.name,
      );

      if (borderRadius != null) {
        return ClipRRect(
          borderRadius: borderRadius,
          child: thumbnailWidget,
        );
      }
      return thumbnailWidget;
    } catch (e) {
      // –ü—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∏–∫–æ–Ω–∫—É
      debugPrint('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è: $e');
      return buildDefaultExerciseIcon(
        exercise,
        width: width,
        height: height,
        backgroundColor: const Color(0xFF1E1E1E),
      );
    }
  }

  // –ü–æ–ª—É—á–∞–µ—Ç URL –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
  static String _getDemoVideoForExercise(Exercise exercise) {
    final muscleGroup = exercise.muscleGroup.toLowerCase();
    final name = exercise.name.toLowerCase();

    // –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è –≤–∏–¥–µ–æ –≤ Supabase
    const String baseSupabaseUrl =
        'https://efctwzpqpukhpqvpirrt.supabase.co/storage/v1/object/public/exercises/';

    // –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ –∏–º–µ–Ω–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
    if (name.contains('push-up') ||
        name.contains('push up') ||
        name.contains('–æ—Ç–∂–∏–º')) {
      return '${baseSupabaseUrl}demo/push_up.mp4'; // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–∂–∏–º–∞–Ω–∏–π
    } else if (name.contains('squat') || name.contains('–ø—Ä–∏—Å–µ–¥')) {
      return '${baseSupabaseUrl}demo/squat.mp4'; // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π
    } else if (name.contains('pull-up') ||
        name.contains('pull up') ||
        name.contains('–ø–æ–¥—Ç—è–≥')) {
      return '${baseSupabaseUrl}demo/pull_up.mp4'; // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏–π
    } else if (name.contains('lunge') || name.contains('–≤—ã–ø–∞–¥')) {
      return '${baseSupabaseUrl}demo/lunge.mp4'; // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤—ã–ø–∞–¥–æ–≤
    } else if (name.contains('plank') || name.contains('–ø–ª–∞–Ω–∫')) {
      return '${baseSupabaseUrl}demo/plank.mp4'; // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–ª–∞–Ω–∫–∏
    } else if (name.contains('deadlift') || name.contains('—Ç—è–≥–∞')) {
      return '${baseSupabaseUrl}demo/deadlift.mp4'; // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ç—è–≥–∏
    } else if (name.contains('bench press') || name.contains('–∂–∏–º –ª–µ–∂–∞')) {
      return '${baseSupabaseUrl}demo/bench_press.mp4'; // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∂–∏–º–∞ –ª–µ–∂–∞
    }

    // –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ –≥—Ä—É–ø–ø–µ –º—ã—à—Ü, –µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ –∏–º–µ–Ω–∏
    if (muscleGroup.contains('chest')) {
      return '${baseSupabaseUrl}demo/chest.mp4'; // –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–∞ –≥—Ä—É–¥—å
    } else if (muscleGroup.contains('back')) {
      return '${baseSupabaseUrl}demo/back.mp4'; // –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–∞ —Å–ø–∏–Ω—É
    } else if (muscleGroup.contains('leg') || muscleGroup.contains('quad')) {
      return '${baseSupabaseUrl}demo/legs.mp4'; // –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–∞ –Ω–æ–≥–∏
    } else if (muscleGroup.contains('shoulder')) {
      return '${baseSupabaseUrl}demo/shoulders.mp4'; // –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–∞ –ø–ª–µ—á–∏
    } else if (muscleGroup.contains('arm') ||
        muscleGroup.contains('bicep') ||
        muscleGroup.contains('tricep')) {
      return '${baseSupabaseUrl}demo/arms.mp4'; // –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–∞ —Ä—É–∫–∏
    } else if (muscleGroup.contains('core') || muscleGroup.contains('abs')) {
      return '${baseSupabaseUrl}demo/core.mp4'; // –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–∞ –ø—Ä–µ—Å—Å
    }

    // –û–±—â–µ–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    return '${baseSupabaseUrl}demo/default.mp4';
  }

  // –°–æ–∑–¥–∞–µ–º –≤–∏–¥–∂–µ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  static Widget buildDefaultExerciseIcon(
    Exercise exercise, {
    double? width,
    double? height,
    Color backgroundColor = const Color(0xFF1E1E1E),
    Color iconColor = Colors.white70,
  }) {
    // –ó–∞—â–∏—Ç–∞ –æ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏ NaN
    if (width != null && !width.isFinite) {
      debugPrint('‚ö†Ô∏è –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏: width=$width –∑–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ null');
      width = null;
    }

    if (height != null && !height.isFinite) {
      debugPrint('‚ö†Ô∏è –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏: height=$height –∑–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ null');
      height = null;
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≥—Ä—É–ø–ø—ã –º—ã—à—Ü
    IconData iconData = Icons.fitness_center;

    // –í—ã–±–∏—Ä–∞–µ–º –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≥—Ä—É–ø–ø—ã –º—ã—à—Ü
    if (exercise.muscleGroup.toLowerCase().contains('chest')) {
      iconData = Icons.accessibility_new;
    } else if (exercise.muscleGroup.toLowerCase().contains('back')) {
      iconData = Icons.accessibility;
    } else if (exercise.muscleGroup.toLowerCase().contains('leg')) {
      iconData = Icons.directions_run;
    } else if (exercise.muscleGroup.toLowerCase().contains('core') ||
        exercise.muscleGroup.toLowerCase().contains('abs')) {
      iconData = Icons.airline_seat_flat;
    } else if (exercise.muscleGroup.toLowerCase().contains('shoulder')) {
      iconData = Icons.accessibility_new;
    } else if (exercise.muscleGroup.toLowerCase().contains('arm') ||
        exercise.muscleGroup.toLowerCase().contains('bicep') ||
        exercise.muscleGroup.toLowerCase().contains('tricep')) {
      iconData = Icons.fitness_center;
    }

    return Container(
      width: width,
      height: height,
      color: backgroundColor,
      child: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          mainAxisSize: MainAxisSize.min, // –§–∏–∫—Å–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º—É –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏—è
          children: [
            Icon(
              iconData,
              size: 28, // –£–º–µ–Ω—å—à–∞–µ–º —Ä–∞–∑–º–µ—Ä –∏–∫–æ–Ω–∫–∏
              color: iconColor,
            ),
            if (width != null && width > 100 && width.isFinite)
              Padding(
                padding: const EdgeInsets.only(top: 8.0),
                child: Text(
                  exercise.name,
                  style: TextStyle(color: iconColor, fontSize: 12),
                  textAlign: TextAlign.center,
                  maxLines: 1, // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
                  overflow: TextOverflow.ellipsis,
                ),
              ),
          ],
        ),
      ),
    );
  }
}
